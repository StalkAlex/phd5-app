stages:
  - build
  - test
  - report
  - release
  - deploy
  - cleanup

variables:
  ISOLATION: "buildpipeline${CI_PIPELINE_ID}"
  STACK_PHP_IMAGE: "${PHP_IMAGE_NAME}:${CI_BUILD_REF}"
  REGISTRY_PHP_IMAGE: "${PHP_IMAGE_NAME}:${CI_BUILD_REF_NAME}"

before_script:
  # set docker-compose isolation
  - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
  - pwd
  - docker version
  - docker-compose version
  - echo ${ISOLATION}
  - echo $(git describe --always --dirty)
  # initialize environments
  - make init
  # run all commands from test directory
  - cd tests

after_script:
  # set docker-compose isolation
  - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
  # run all commands from test directory
  - cd tests
  - cp .env-dist .env
  - make clean

codeception:
  stage: test
  script:
    - make all
    - make run-tests
  except:
    - coverage
  artifacts:
    name: ${CI_PROJECT_PATH}-p${CI_PIPELINE_ID}-codeception
    when: always
    expire_in: 4 weeks
    paths:
      - tests/_log

coverage:
  stage: test
  script:
    - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
    - export PHP_ENABLE_XDEBUG=1
    - make all
    - make run-coverage
  only:
    - coverage
  artifacts:
    name: ${CI_PROJECT_PATH}-p${CI_PIPELINE_ID}-coverage
    when: always
    expire_in: 4 weeks
    paths:
      - tests/_log

lint:
  stage: test
  script:
    - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
    - cd ..
    - cp .env-dist .env
    - make help
    - make lint
    - make lint-composer
  artifacts:
    name: ${CI_PROJECT_PATH}-p${CI_PIPELINE_ID}-lint
    when: always
    expire_in: 4 weeks
    paths:
      - tests/_lint

release:
  stage: release
  script:
    - docker login --username ${REGISTRY_USER} --password ${REGISTRY_PASS} ${REGISTRY_HOST}
    - make version build
    - docker tag ${STACK_PHP_IMAGE} ${REGISTRY_PHP_IMAGE}
    - docker push ${REGISTRY_PHP_IMAGE}
  only:
    - latest
    - experimental
    - tags

deploy:staging:
  stage: deploy
  environment: staging
  allow_failure: true
  script:
    - echo "Auto-deployment trigger not implemented."
    - exit 1
  only:
    - latest
